import React, { useMemo, useState, useEffect } from "react";

const SAMPLE_BOOKS = [
  { id: "1", title: "The Very Hungry Caterpillar", author: "Eric Carle", year: 1969 },
  { id: "2", title: "Where the Wild Things Are", author: "Maurice Sendak", year: 1963 },
  { id: "3", title: "Goodnight Moon", author: "Margaret Wise Brown", year: 1947 },
];

function classNames(...cls) {
  return cls.filter(Boolean).join(" ");
}

function BookCard({ book }) {
  return (
    <article
      className="group relative flex flex-col rounded-2xl border p-4 transition-shadow border-neutral-200 bg-neutral-50 hover:shadow-md dark:border-neutral-700 dark:bg-neutral-800"
      title={book.title}
    >
      <div className="aspect-[3/4] w-full overflow-hidden rounded-xl border border-neutral-200 bg-neutral-100 dark:border-neutral-700 dark:bg-neutral-700"></div>
      <div className="mt-3 flex-1">
        <h3 className="line-clamp-2 text-sm font-semibold text-neutral-900 dark:text-neutral-100">{book.title}</h3>
        <p className="mt-1 text-xs text-neutral-600 dark:text-neutral-400">{book.author}</p>
        <p className="mt-0.5 text-xs text-neutral-500 dark:text-neutral-500">{book.year}</p>
      </div>
      <button
        className="mt-4 inline-flex items-center justify-center rounded-xl border px-3 py-2 text-xs border-neutral-300 bg-white text-neutral-800 hover:bg-neutral-100 dark:border-neutral-600 dark:bg-neutral-700 dark:text-neutral-200 dark:hover:bg-neutral-600"
        type="button"
      >
        View details
      </button>
    </article>
  );
}

export default function BookLibraryPage() {
  const [query, setQuery] = useState("");
  const [sort, setSort] = useState("title");
  const [dark, setDark] = useState(() => {
    if (typeof window === "undefined") return false;
    const saved = localStorage.getItem("theme");
    if (saved) return saved === "dark";
    return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
  });

  useEffect(() => {
    const root = document.documentElement;
    root.classList.toggle("dark", dark);
    try {
      localStorage.setItem("theme", dark ? "dark" : "light");
    } catch {}
  }, [dark]);

  const books = useMemo(() => {
    const q = query.trim().toLowerCase();
    let filtered = SAMPLE_BOOKS.filter((b) =>
      [b.title, b.author, String(b.year)].join(" ").toLowerCase().includes(q)
    );

    const collators = {
      title: (a, b) => a.title.localeCompare(b.title),
      author: (a, b) => a.author.localeCompare(b.author),
      year: (a, b) => b.year - a.year,
    };

    filtered.sort(collators[sort] || collators.title);
    return filtered;
  }, [query, sort]);

  return (
    <div className="min-h-screen bg-neutral-100 dark:bg-neutral-900">
      <header className="sticky top-0 z-10 border-b border-neutral-200 bg-white/80 backdrop-blur dark:border-neutral-700 dark:bg-neutral-800/80">
        <div className="mx-auto max-w-6xl px-4 py-3 flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between">
          <h1 className="text-xl font-semibold text-neutral-900 dark:text-neutral-100">Library</h1>
          <div className="flex w-full gap-2 sm:w-auto">
            <input
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              placeholder="Search by title, author"
              className="w-full rounded-xl border border-neutral-300 bg-white px-3 py-2 text-sm text-neutral-900 placeholder-neutral-400 focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-100 dark:placeholder-neutral-500 sm:w-80"
            />
            <select
              value={sort}
              onChange={(e) => setSort(e.target.value)}
              className="rounded-xl border border-neutral-300 bg-white px-3 py-2 text-sm text-neutral-900 focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-100"
            >
              <option value="title">Title</option>
              <option value="author">Author</option>
              <option value="year">Newest</option>
            </select>
            <button
              onClick={() => setDark((v) => !v)}
              aria-label="Toggle dark mode"
              className="rounded-xl border border-neutral-300 bg-white px-3 py-2 text-sm text-neutral-900 hover:bg-neutral-100 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-100 dark:hover:bg-neutral-700"
            >
              {dark ? "Light" : "Dark"}
            </button>
          </div>
        </div>
      </header>

      <main className="mx-auto max-w-6xl px-4 py-6">
        {books.length === 0 ? (
          <p className="text-sm text-neutral-600 dark:text-neutral-400">No books match your search.</p>
        ) : (
          <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-4">
            {books.map((b) => (
              <BookCard key={b.id} book={b} />
            ))}
          </div>
        )}
      </main>
    </div>
  );
}
